<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yrm.permission.dao.SysLogMapper">
    <resultMap id="BaseResultMap" type="com.yrm.permission.entity.SysLog">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="target_id" property="targetId" jdbcType="INTEGER"/>
        <result column="operator" property="operator" jdbcType="VARCHAR"/>
        <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP"/>
        <result column="operate_ip" property="operateIp" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.yrm.permission.entity.SysLogWithBLOBs" extends="BaseResultMap">
        <result column="old_value" property="oldValue" jdbcType="LONGVARCHAR"/>
        <result column="new_value" property="newValue" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, type, target_id, operator, operate_time, operate_ip, status
  </sql>
    <sql id="Blob_Column_List">
    old_value, new_value
  </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from sys_log
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.yrm.permission.entity.SysLogWithBLOBs">
    insert into sys_log (id, type, target_id, 
      operator, operate_time, operate_ip, 
      status, old_value, new_value
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{targetId,jdbcType=INTEGER}, 
      #{operator,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, #{operateIp,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{oldValue,jdbcType=LONGVARCHAR}, #{newValue,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.yrm.permission.entity.SysLogWithBLOBs">
        insert into sys_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="targetId != null">
                target_id,
            </if>
            <if test="operator != null">
                operator,
            </if>
            <if test="operateTime != null">
                operate_time,
            </if>
            <if test="operateIp != null">
                operate_ip,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="oldValue != null">
                old_value,
            </if>
            <if test="newValue != null">
                new_value,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="targetId != null">
                #{targetId,jdbcType=INTEGER},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="operateTime != null">
                #{operateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateIp != null">
                #{operateIp,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="oldValue != null">
                #{oldValue,jdbcType=LONGVARCHAR},
            </if>
            <if test="newValue != null">
                #{newValue,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yrm.permission.entity.SysLogWithBLOBs">
        update sys_log
        <set>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="targetId != null">
                target_id = #{targetId,jdbcType=INTEGER},
            </if>
            <if test="operator != null">
                operator = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="operateTime != null">
                operate_time = #{operateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateIp != null">
                operate_ip = #{operateIp,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="oldValue != null">
                old_value = #{oldValue,jdbcType=LONGVARCHAR},
            </if>
            <if test="newValue != null">
                new_value = #{newValue,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yrm.permission.entity.SysLogWithBLOBs">
    update sys_log
    set type = #{type,jdbcType=INTEGER},
      target_id = #{targetId,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      old_value = #{oldValue,jdbcType=LONGVARCHAR},
      new_value = #{newValue,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.yrm.permission.entity.SysLog">
    update sys_log
    set type = #{type,jdbcType=INTEGER},
      target_id = #{targetId,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="countBySysLogRequestDTO" parameterType="com.yrm.permission.dto.SysLogSearchDTO" resultType="int">
        SELECT COUNT(1) FROM sys_log WHERE 1=1
        <if test="sysLogSearchDTO.logType !=null">
            AND type = #{sysLogSearchDTO.logType}
        </if>
        <if test="sysLogSearchDTO.beforeSeg !=null and sysLogSearchDTO.beforeSeg !=''">
            AND old_value LIKE #{sysLogSearchDTO.beforeSeg}
        </if>
        <if test="sysLogSearchDTO.afterSeg !=null and sysLogSearchDTO.afterSeg !=''">
            AND new_value LIKE #{sysLogSearchDTO.afterSeg}
        </if>
        <if test="sysLogSearchDTO.operator!=null and sysLogSearchDTO.operator!=''">
            AND operator LIKE #{sysLogSearchDTO.operator}
        </if>
        <if test="sysLogSearchDTO.fromTime!=null">
            AND operate_time <![CDATA[ >= ]]> #{sysLogSearchDTO.fromTime}
        </if>
        <if test="sysLogSearchDTO.toTime!=null">
            AND operate_time <![CDATA[ <= ]]> #{sysLogSearchDTO.toTime}
        </if>
    </select>
    <select id="getCurrentPageData" parameterType="map" resultMap="ResultMapWithBLOBs">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM sys_log
        WHERE 1=1
        <if test="sysLogSearchDTO.logType !=null">
            AND type = #{sysLogSearchDTO.logType}
        </if>
        <if test="sysLogSearchDTO.beforeSeg !=null and sysLogSearchDTO.beforeSeg !=''">
            AND old_value LIKE #{sysLogSearchDTO.beforeSeg}
        </if>
        <if test="sysLogSearchDTO.afterSeg !=null and sysLogSearchDTO.afterSeg !=''">
            AND new_value LIKE #{sysLogSearchDTO.afterSeg}
        </if>
        <if test="sysLogSearchDTO.operator!=null and sysLogSearchDTO.operator!=''">
            AND operator LIKE #{sysLogSearchDTO.operator}
        </if>
        <if test="sysLogSearchDTO.fromTime!=null">
            AND operate_time <![CDATA[ >= ]]> #{sysLogSearchDTO.fromTime}
        </if>
        <if test="sysLogSearchDTO.toTime!=null">
            AND operate_time <![CDATA[ <= ]]> #{sysLogSearchDTO.toTime}
        </if>
        ORDER BY operate_time DESC
        limit #{startIndex}, #{pageSize}
    </select>
</mapper>